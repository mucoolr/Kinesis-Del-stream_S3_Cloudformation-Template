AWSTemplateFormatVersion: "2010-09-09"
Description: A sample template
Parameters:
    deliveryStreamName:
        Type: String 
    sourceDatastream:
        Type: String
        Default: arn:aws:kinesis:us-east-1:<AWS-account-no.>:stream/kin-001-dev-ctr      
    lambdaFunctionARN:
        Type: String   
        Default: arn:aws:lambda:us-east-1:<AWS-account-no.>:function:Dev-ChatProject-LogsTransformationLambda	    
    BucketName:
        Type: String 
    ErrorOutputPerfix:
        Type: String
    S3PrefixName:
        Type: String    
    RoleName:
        Type: String 
    EnableCloudwatchLogs:
        Type: String
        AllowedValues:
          - yes
          - no
Resources :
    Deliverystream: 
        Type: AWS::KinesisFirehose::DeliveryStream
        Properties: 
            DeliveryStreamName: !Ref deliveryStreamName
            DeliveryStreamType: KinesisStreamAsSource
            KinesisStreamSourceConfiguration: 
              KinesisStreamARN: !Ref sourceDatastream
              RoleARN: !GetAtt deliveryRole.Arn
            ExtendedS3DestinationConfiguration:
              BucketARN: !GetAtt S3Bucket.Arn
              CloudWatchLoggingOptions: 
                  Enabled: !Ref EnableCloudwatchLogs
                  LogGroupName: /aws/kinesisfirehose/DeliveryStreamName
                  LogStreamName: !Ref deliveryStreamName
              ErrorOutputPrefix: !Ref ErrorOutputPerfix
              Prefix: !Ref S3PrefixName
              ProcessingConfiguration: 
                  Enabled: !Ref EnableCloudwatchLogs
                  Processors: 
                  - Type: Lambda 
                    Parameters: 
                    - ParameterName: LambdaArn 
                      ParameterValue: !Ref lambdaFunctionARN
              RoleARN: !GetAtt deliveryRole.Arn
              S3BackupMode: Enabled
              S3BackupConfiguration:
                  BucketARN: !GetAtt S3Bucket.Arn
                  RoleARN: !GetAtt deliveryRole.Arn
                  Prefix: backup/
                  
    S3Bucket:
        Type: AWS::S3::Bucket                  
        Properties:
            BucketName: !Ref BucketName
            AccessControl: Private
            PublicAccessBlockConfiguration:
              BlockPublicAcls: true
              BlockPublicPolicy: true
              IgnorePublicAcls: true
              RestrictPublicBuckets: true
            BucketEncryption:
              ServerSideEncryptionConfiguration:
                - ServerSideEncryptionByDefault:
                    SSEAlgorithm: AES256
            OwnershipControls:
              Rules:
                - ObjectOwnership: BucketOwnerPreferred        

    deliveryRole:
        Type: AWS::IAM::Role
        Properties:
          AssumeRolePolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: ''
                Effect: Allow
                Principal:
                  Service: firehose.amazonaws.com
                Action: 'sts:AssumeRole'
                Condition:
                  StringEquals:
                    'sts:ExternalId': !Ref 'AWS::AccountId'
          Path: "/"
          Policies:
            - PolicyName: firehose_delivery_policy
              PolicyDocument:
                Version: 2012-10-17
                Statement:
                  - Effect: Allow
                    Action:
                      - 's3:AbortMultipartUpload'
                      - 's3:GetBucketLocation'
                      - 's3:GetObject'
                      - 's3:ListBucket'
                      - 's3:ListBucketMultipartUploads'
                      - 's3:PutObject'
                    Resource:
                      - !Join 
                        - ''
                        - - 'arn:aws:s3:::'
                          - !Ref S3Bucket
                      - !Join 
                        - ''
                        - - 'arn:aws:s3:::'
                          - !Ref S3Bucket
                          - '/*'

                  - Effect: Allow
                    Action:
                      - lambda:InvokeFunction
                      - lambda:GetFunctionConfiguration    
                    Resource: !Ref lambdaFunctionARN

                  - Effect: Allow
                    Action:
                    - logs:PutLogEvents
                    Resource:
                    - !Join
                        - ''
                        - - 'arn:aws:logs:'
                          - !Ref 'AWS::Region'
                          - ':'
                          - !Ref 'AWS::AccountId'
                          - 'log-group:/aws/kinesisfirehose/'
                          - !Ref deliveryStreamName
                          - ':log-stream:*'  
                    - !Join
                        - ''
                        - - 'arn:aws:logs:'
                          - !Ref 'AWS::Region'
                          - ':'
                          - !Ref 'AWS::AccountId'
                          - 'log-group:%FIREHOSE_POLICY_TEMPLATE_PLACEHOLDER%:log-stream:*'

                  - Effect: Allow
                    Action:
                    - kinesis:DescribeStream
                    - kinesis:GetShardIterator
                    - kinesis:GetRecords
                    - kinesis:ListShards
                    Resource: !Ref sourceDatastream                         
          RoleName: !Ref RoleName
                                                         

                  
              
